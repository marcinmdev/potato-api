name: Testing Potato-API
on: [push, pull_request]
env:
  PROJECT_NAME: potato-api
  DATABASE_NAME: potato-api_test

jobs:
  symfony:
    name: Potato-API Code Validator
    runs-on: ubuntu-latest

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: $PROJECT_NAME
          POSTGRES_PASSWORD: $PROJECT_NAME
          POSTGRES_DB: $DATABASE_NAME
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migration and fixtures
        run: |
          php bin/console doctrine:schema:drop --force --full-database -n || echo "Schema drop failed"
          php bin/console doctrine:migrations:migrate -n || echo "No migrations found or migration failed"
          php bin/console doctrine:fixtures:load --append -n || echo "Fixtures error"
        env:
          DATABASE_URL: postgres://$PROJECT_NAME:$PROJECT_NAME@127.0.0.1:${{ job.services.postgres.ports[5432] }}/$DATABASE_NAME?serverVersion=14&charset=utf8

      - name: Code validator
        run: |
          php bin/console cache:warmup
          php bin/console cache:warmup --env=test
          composer code-validator
        env:
          DATABASE_URL: postgres://$PROJECT_NAME:$PROJECT_NAME@127.0.0.1:${{ job.services.postgres.ports[5432] }}/$DATABASE_NAME?serverVersion=14&charset=utf8
